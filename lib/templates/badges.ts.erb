// noinspection JSAnnotator,ES6UnusedImports,TypeScriptCheckImport,TypeScriptValidateTypes,TypeScriptUnresolvedFunction,TypeScriptUnresolvedVariable

import * as inflection from "inflection"

const allBadges = [
<% all_badges.each do|badge| %>
    '<%= badge %>',
<% end %>
] as const

export type Badge = typeof allBadges[number]

const BadgeTitles: Record<string, string> = {
<% badge_titles.each do|badge,title| %>
    '<%= badge %>': "<%= title %>",
<% end %>
}

/**
 * @param badge
 * @return the title for the given badge
 */
function title(badge: string): string {
    return BadgeTitles[badge] || inflection.titleize(badge)
}

<% badge_vars.each do |badge, var| %>
// @ts-ignore
import <%= var %> from '../images/badges/badge-<%= badge %>.svg'
<% end %>

/**
 * @param badge
 * @return the image source path for the given badge
 */
function imageSource(badge: string): string {
    switch (badge) {
<% badge_vars.each do |badge, var| %>
    case '<%= badge %>': return <%= var %>
<% end %>
    default:
        return InformationTechnologyadmin
    }
}

const Badges = {
    all: allBadges,
    title,
    imageSource
}

export default Badges