@import "tt-mixins";

.tt-tab-container {
	display: flex;

	.tt-tab-list {
		flex: 0 0 auto;
		gap: var(--tt-border-radius);

		a {
			display: flex;
			@include tt-no-select;
			align-items: center;
			padding: 0.5em 1em;
			gap: 0.5em;

			i {
				display: block;
				transform: scale(1.2);
			}
		}

		.spacer {
			flex: 1 1 auto;
			min-width: 0;
			min-height: 0;
		}

		a.action {
			padding: 0.5em;
			@include tt-rounded-corners;
			&:hover {
				text-decoration: underline;
				background-color: rgba(#000, 0.05);
			}
			&:active {
				background-color: rgba(#fff, 0.1);
			}
		}

		a.tab {
			background-color: var(--tt-panel-background);

			&:not(.active) {
				// slightly darker when it's not active
				filter: brightness(0.9);
				&:hover:not(.disabled) {
					// lighter on hover
					filter: brightness(0.95);
				}
				&:active:not(.disabled) {
					filter: brightness(1);
				}
			}

			&.active {
				cursor: default;
			}

			&.disabled {
				cursor: not-allowed;
				opacity: 50%;
			}

		}
	}

	&.top, &.bottom {
		> .tt-tab-list {
			padding: 0 var(--tt-border-radius);
			flex-direction: row;
		}
	}
	&.top {
		flex-direction: column;
		> .tt-tab-list a.tab {
			@include tt-top-rounded-corners;
		}
	}
	&.bottom {
		flex-direction: column-reverse;
		> .tt-tab-list a.tab {
			@include tt-bottom-rounded-corners;
		}
	}

	&.left, &.right {
		> .tt-tab-list {
			padding: var(--tt-border-radius) 0;
			flex-direction: column;
		}
	}
	&.left {
		flex-direction: row;
		> .tt-tab-list a.tab {
			@include tt-left-rounded-corners;
		}
	}
	&.right {
		flex-direction: row-reverse;
		> .tt-tab-list a.tab {
			@include tt-right-rounded-corners;
		}
	}

	.tt-tab-content {
		flex: 1 1 auto;
		min-height: 0;
		min-width: 0;
		padding: var(--tt-pad);
		background-color: var(--tt-panel-background);
		@include tt-rounded-corners;
	}
}