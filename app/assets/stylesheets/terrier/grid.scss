
$breakpoint: 900px !default;

////////////////////////////////////////////////////////////////////////////////
// Horizontal Grid
////////////////////////////////////////////////////////////////////////////////

// space out children horizontally by either stretching (.stretch-column) or shrinking (.shrink-column) their contents
// add .collapsible to collapse all columns under the breakpoint
.horizontal-grid {
	display: flex;
	&.padded {
		padding: 1em;
	}
	.stretch-column, .shrink-column {
		padding: 0 8px;
		&.no-padding {
			padding: 0;
		}
		&.padded {
			padding: 12px 16px;
		}
		&:first-child {
			padding-left: 0;
		}
		&:last-child {
			padding-right: 0;
		}
		&.align-middle { // align the content of this column to the middle, vertically
			align-self: center;
		}
		&.align-bottom { // align the content of this column to the bottom
			align-self: end;
		}
	}
	.stretch-column {
		flex: 1;
		min-width: 0;
	}
	.shrink-column {
		flex: 0 1 auto;
	}
	&.reversed {
		flex-direction: row-reverse;
		.stretch-column, .shrink-column {
			&:first-child {
				padding-right: 0;
				padding-left: 8px;
			}
			&:last-child {
				padding-left: 0;
				padding-right: 8px;
			}
		}
	}
}
@media only screen and (max-width: $breakpoint) {
	.horizontal-grid.collapsible {
		display: block;
		> .stretch-column, > .shrink-column {
			padding: 0;
		}
	}
}



////////////////////////////////////////////////////////////////////////////////
// Block Grid
////////////////////////////////////////////////////////////////////////////////

// similar to foundation's block grid, but you don't need to explicitly specify number of columns
// items are 200px wide by default, set flex-basis to override
.block-grid {
	display: flex;
	flex-wrap: wrap;
	.grid-item {
		flex: 1 1 200px;
		img {
			max-width: 100%;
		}
	}
}