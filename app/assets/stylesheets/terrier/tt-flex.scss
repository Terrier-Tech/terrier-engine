
.tt-flex {
	display: flex;
	gap: 0;
	padding: 0;
	align-content: flex-start;

	&.h-gap {
		row-gap: 0;
	}

	&.gap {
		gap: var(--tt-gap);
	}

	&.large-gap {
		gap: calc(var(--tt-gap) * 2);
	}

	&.small-gap {
		gap: calc(var(--tt-gap) / 2);
	}

	&.no-gap {
		gap: 0;
	}

	&.padded {
		padding: var(--tt-pad);
	}

	&.h-padded {
		padding: 0 var(--tt-pad);
	}

	&.inline {
		display: inline-flex;
	}

	&.column {
		flex-direction: column;
	}

	&.wrap {
		flex-wrap: wrap;
	}

	&.justify-center {
		justify-content: center;
	}

	&.justify-start {
		justify-content: flex-start;
	}

	&.justify-end {
		justify-content: flex-end;
	}

	&.justify-space-evenly {
		justify-content: space-evenly;
	}

	&.justify-space-between {
		justify-content: space-between;
	}

	&.align-center {
		align-items: center;
	}

	&.align-start {
		align-items: flex-start;
	}

	&.align-end {
		align-items: flex-end;
	}

	@mixin stretch {
		flex: 1 1 auto;
	}
	@mixin shrink {
		flex: 0 0 auto;
	}

	> div, > label, > a.stretch {
		// default is stretch
		@include stretch;
		min-width: 1em;
		min-height: 1em;

		&.shrink {
			@include shrink;
		}
	}

	&.shrink-items > div, &.shrink-items > label {
		@include shrink;

		&.stretch {
			@include stretch;
		}
	}

	@media screen and (max-width: var(--tt-phone-breakpoint)) {
		.tt-flex.phone-collapsible {
			flex-direction: column;
		}
	}

	@media screen and (max-width: var(--tt-mobile-breakpoint)) {
		.tt-flex.mobile-collapsible {
			flex-direction: column;
		}
	}

	@media screen and (max-width: var(--tt-tablet-breakpoint)) {
		.tt-flex.tablet-collapsible {
			flex-direction: column;
		}
	}
}

